name: Project Setup and Maintenance

on:
  workflow_dispatch:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  push:
    branches: [ main ]
    paths:
      - 'scripts/**'
      - '.github/workflows/setup-project.yml'

jobs:
  setup-project:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup GitHub CLI
      uses: cli/setup-gh@v2
    
    - name: Setup repository
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Set repository description
        gh repo edit --description "Secure Document Sharing with AI - A modern, open-source document management platform with intelligent content analysis and real-time collaboration features."
        
        # Set homepage
        gh repo edit --homepage "https://docqet.com"
        
        # Enable features
        gh repo edit --enable-issues --enable-wiki --enable-projects
        
        # Add topics
        gh repo edit --add-topic "document-management,ai,fastapi,nextjs,typescript,python,postgresql,redis,vector-search,open-source,security,collaboration"
    
    - name: Setup labels
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ -f "scripts/setup-github-labels.sh" ]; then
          chmod +x scripts/setup-github-labels.sh
          ./scripts/setup-github-labels.sh
        fi
    
    - name: Create project board
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create project board if it doesn't exist
        gh api repos/loopcraftlab/docqet/projects --method POST \
          --field name="Docqet Development" \
          --field description="Project board for Docqet development" \
          --field private=false || echo "Project board already exists or creation failed"
    
    - name: Setup branch protection
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Enable branch protection for main branch
        gh api repos/loopcraftlab/docqet/branches/main/protection \
          --method PUT \
          --field required_status_checks='{"strict":true,"contexts":["test-backend","test-frontend","test-integration"]}' \
          --field enforce_admins=true \
          --field required_pull_request_reviews='{"required_approving_review_count":1,"dismiss_stale_reviews":true}' \
          --field restrictions=null || echo "Branch protection setup failed or already configured"
    
    - name: Create initial issues
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create initial project issues if they don't exist
        gh issue create --title "Story 1.2: User Authentication and Authorization" \
          --body "Implement user authentication and authorization system including:
        - User registration and login
        - JWT token management
        - Role-based access control
        - Password reset functionality
        - Session management" \
          --label "story-1.2,backend,security,priority-high" || echo "Issue already exists"
        
        gh issue create --title "Story 1.3: Basic Document Upload and Storage" \
          --body "Implement basic document management functionality including:
        - File upload with validation
        - Document storage and retrieval
        - File type detection
        - Basic metadata management
        - Storage optimization" \
          --label "story-1.3,backend,database,priority-high" || echo "Issue already exists"
        
        gh issue create --title "Story 1.4: Core AI Integration Setup" \
          --body "Set up core AI integration infrastructure including:
        - OpenAI API integration
        - Document text extraction
        - Vector embeddings generation
        - Qdrant vector database setup
        - Basic AI analysis endpoints" \
          --label "story-1.4,backend,ai,priority-high" || echo "Issue already exists"
    
    - name: Update README
      run: |
        # Update README with current status
        echo "Project setup completed successfully!"
        echo "Repository configured with proper description, topics, and labels"
        echo "Initial issues created for development roadmap" 