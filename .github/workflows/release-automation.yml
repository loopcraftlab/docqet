name: Release Automation

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT
    
    - name: Generate changelog
      id: changelog
      run: |
        # Get previous tag
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
        
        if [[ "$PREVIOUS_TAG" == "" ]]; then
          # First release
          CHANGELOG=$(git log --oneline --pretty=format:"- %s (%h)" --no-merges)
        else
          # Get commits since last tag
          CHANGELOG=$(git log --oneline --pretty=format:"- %s (%h)" --no-merges $PREVIOUS_TAG..HEAD)
        fi
        
        # Create formatted changelog
        echo "## ${{ steps.version.outputs.version }}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "Release Date: $(date +%Y-%m-%d)" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Changes" >> CHANGELOG.md
        echo "$CHANGELOG" >> CHANGELOG.md
        
        # Store changelog for release
        echo "changelog<<EOF" >> $GITHUB_OUTPUT
        cat CHANGELOG.md >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
    
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: ${{ steps.changelog.outputs.changelog }}
        draft: false
        prerelease: false
    
    - name: Notify release
      if: success()
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: 'Release ${{ steps.version.outputs.version }} has been created successfully!'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} 